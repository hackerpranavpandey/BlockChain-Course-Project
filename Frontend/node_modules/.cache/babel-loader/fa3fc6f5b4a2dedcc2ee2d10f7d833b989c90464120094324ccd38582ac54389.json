{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Documents/Blockchain-Project/client/src/components/Display.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nimport \"./Display.css\"; // Make sure this CSS file exists\n\n// --- Hashing Helper (Keep as is) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateArrayBufferHash = async buffer => {\n  if (!buffer || buffer.byteLength === 0) {\n    throw new Error(\"Cannot hash empty or invalid buffer.\");\n  }\n  try {\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n    return hashHex;\n  } catch (error) {\n    console.error(\"Error during crypto.subtle.digest:\", error);\n    throw new Error(\"Hashing failed. Crypto API might not be available or input was invalid.\");\n  }\n};\n\n// --- URL Builder Helper (Keep as is, using Pinata default) ---\nconst buildDisplayUrl = cidOrUri => {\n  if (!cidOrUri || typeof cidOrUri !== 'string' || cidOrUri.trim().length === 0) {\n    console.warn(`Invalid input for buildDisplayUrl: ${cidOrUri}`);\n    return null;\n  }\n  const gateways = [\"https://gateway.pinata.cloud/ipfs/\",\n  // Using Pinata\n  \"https://ipfs.io/ipfs/\", \"https://cloudflare-ipfs.com/ipfs/\", \"https://dweb.link/ipfs/\"];\n  const gateway = gateways[0]; // Pinata\n\n  if (cidOrUri.startsWith('http://') || cidOrUri.startsWith('https://')) {\n    if (gateways.some(gw => cidOrUri.startsWith(gw))) {\n      return cidOrUri;\n    } else {\n      console.warn(`URL is HTTP(S) but not a recognized IPFS gateway: ${cidOrUri}`);\n      return cidOrUri;\n    }\n  } else if (cidOrUri.startsWith('ipfs://')) {\n    const cid = cidOrUri.substring(7);\n    return cid.length > 40 ? `${gateway}${cid}` : null;\n  } else if ((cidOrUri.startsWith('Qm') || cidOrUri.startsWith('b')) && cidOrUri.length > 40) {\n    console.log(`Identified CID: ${cidOrUri}, building URL with ${gateway}`);\n    return `${gateway}${cidOrUri}`;\n  } else {\n    console.warn(`Skipping unrecognized format for URL building: ${cidOrUri}`);\n    return null;\n  }\n};\n\n// --- MediaRenderer Component (Keep as is with 'tryVideo' logic) ---\nconst MediaRenderer = ({\n  url,\n  altText\n}) => {\n  _s();\n  const [mediaType, setMediaType] = useState('unknown');\n  const [tryVideo, setTryVideo] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    setHasError(false);\n    setTryVideo(false);\n    if (!url) {\n      setMediaType('unknown');\n      setHasError(true);\n      console.warn(\"MediaRenderer received invalid URL:\", url);\n      return;\n    }\n    const extensionMatch = url.match(/\\.([^.?#]+)(?:[?#]|$)/i);\n    const extension = extensionMatch ? extensionMatch[1].toLowerCase() : null;\n    const imageExtensions = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'svg'];\n    const videoExtensions = ['mp4', 'webm', 'ogg', 'mov', 'avi', 'mkv', 'qt'];\n    if (imageExtensions.includes(extension)) {\n      setMediaType('image');\n      // console.log(`Media type determined as 'image' for ${url}`); // Optional log\n    } else if (videoExtensions.includes(extension)) {\n      setMediaType('video');\n      // console.log(`Media type determined as 'video' for ${url}`); // Optional log\n    } else {\n      setMediaType('unknown');\n      // console.log(`Media type 'unknown' for ${url}, will try rendering as image first.`); // Optional log\n    }\n  }, [url]);\n  const handleImageError = () => {\n    // console.log(`>>> handleImageError called for URL: ${url}. Current mediaType: ${mediaType}, hasError: ${hasError}, tryVideo: ${tryVideo}`); // Optional debug log\n    if (mediaType === 'unknown' && !hasError) {\n      console.warn(`Image attempt failed for unknown type: ${url}. Setting flag to try video render.`);\n      setTryVideo(true);\n    } else {\n      console.warn(`Failed to load image from: ${url}. Setting final error state.`);\n      setHasError(true);\n    }\n  };\n  const handleVideoError = () => {\n    console.warn(`Failed to load video from: ${url}. Setting final error state.`);\n    setHasError(true);\n  };\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-fallback error\",\n      children: [\"\\u26A0\\uFE0F Error loading media.\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Open Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  if (mediaType === 'video' || tryVideo) {\n    // console.log(`Rendering <video> for ${url} (mediaType: ${mediaType}, tryVideo: ${tryVideo})`); // Optional log\n    return /*#__PURE__*/_jsxDEV(\"video\", {\n      src: url,\n      controls: true,\n      preload: \"metadata\",\n      className: \"media-item video-item\",\n      onError: handleVideoError,\n      children: [\"Your browser does not support the video tag.\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, url + '-video', true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n  if (mediaType === 'image' || mediaType === 'unknown' && !tryVideo) {\n    // console.log(`Rendering <img> for ${url} (mediaType: ${mediaType}, tryVideo: ${tryVideo})`); // Optional log\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: altText,\n      className: \"media-item image-list-item\",\n      onError: handleImageError,\n      loading: \"lazy\"\n    }, url + '-image', false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-fallback\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n};\n\n// --- Main Display Component ---\n_s(MediaRenderer, \"/n0JtVkqEnvb8bspR6pNFeGXlpA=\");\n_c = MediaRenderer;\nconst Display = ({\n  contract,\n  account\n}) => {\n  _s2();\n  const [displayData, setDisplayData] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [verificationStatus, setVerificationStatus] = useState({});\n\n  // --- getdata Function ---\n  const getdata = async () => {\n    setDisplayData([]);\n    setMessage(\"\");\n    setLoading(true);\n    setVerificationStatus({});\n    const otherAddressInput = document.querySelector(\".address\");\n    const otherAddress = otherAddressInput === null || otherAddressInput === void 0 ? void 0 : otherAddressInput.value.trim();\n    let addressToQuery = otherAddress || account; // Defaults to connected account if input is empty\n\n    // --- Validations ---\n    if (!contract) {\n      setMessage(\"Error: Contract not loaded yet.\");\n      setLoading(false);\n      return;\n    }\n    if (!account) {\n      setMessage(\"Error: Wallet not connected.\");\n      setLoading(false);\n      return;\n    } // Added check for connected account\n    if (!addressToQuery) {\n      setMessage(\"Error: No address specified or connected.\");\n      setLoading(false);\n      return;\n    }\n    if (!/^0x[a-fA-F0-9]{40}$/.test(addressToQuery)) {\n      setMessage(\"Error: Invalid Ethereum address format provided.\");\n      setLoading(false);\n      return;\n    }\n    addressToQuery = addressToQuery.toLowerCase(); // Normalize address to query\n    const connectedAccountLower = account.toLowerCase(); // Normalize connected account\n\n    try {\n      setMessage(`Fetching content for ${addressToQuery.substring(0, 6)}...${addressToQuery.substring(addressToQuery.length - 4)}`);\n      console.log(`Fetching data for address: ${addressToQuery}`);\n\n      // --- !!! IMPORTANT: SIGNER CHECK !!! ---\n      let currentSignerAddress = '';\n      if (contract.signer) {\n        currentSignerAddress = await contract.signer.getAddress();\n        console.log(`DEBUG: Calling contract.display AS signer: ${currentSignerAddress}`);\n        // Optional: Strict check if the signer matches the 'account' prop passed down\n        if (currentSignerAddress.toLowerCase() !== connectedAccountLower) {\n          console.error(`CRITICAL: Signer address mismatch! Component account prop: ${account}, Contract signer: ${currentSignerAddress}`);\n          // You might want to throw an error or force a reload here if this happens\n          // throw new Error(\"Signer mismatch detected. Please reconnect wallet or refresh.\");\n          setMessage(\"Error: Wallet signer mismatch. Please refresh or reconnect.\");\n          setLoading(false);\n          return; // Stop execution\n        }\n      } else {\n        console.error(\"CRITICAL: Contract object does not have a signer attached!\");\n        setMessage(\"Error: Cannot read data - contract signer is missing.\");\n        setLoading(false);\n        return; // Stop execution\n      }\n      // --- END SIGNER CHECK ---\n\n      // --- Call the Smart Contract ---\n      // The contract object inherently uses its associated signer (checked above)\n      // So msg.sender in the contract call will be currentSignerAddress\n      const result = await contract.display(addressToQuery);\n      console.log(\"Raw contract result:\", result);\n\n      // --- Validate Contract Result Structure ---\n      if (!Array.isArray(result) || result.length !== 2 || !Array.isArray(result[0]) || !Array.isArray(result[1])) {\n        let errorDetail = \"Contract did not return the expected structure [[string], [string]].\";\n        if (result === null || typeof result !== 'object') {\n          errorDetail = `Contract returned non-array data: ${result}`;\n        }\n        throw new Error(`${errorDetail} Check contract logic or address permissions.`);\n      }\n      const cidsArray = result[0];\n      const hashesArray = result[1];\n      if (cidsArray.length !== hashesArray.length) {\n        throw new Error(\"Contract returned mismatched CID and Hash data.\");\n      }\n\n      // --- Process Fetched Data ---\n      if (cidsArray.length === 0) {\n        // Use a different message if querying another address vs self\n        if (addressToQuery === connectedAccountLower) {\n          setMessage(`You haven't uploaded any content yet.`);\n        } else {\n          setMessage(`No content found for address ${addressToQuery.substring(0, 6)}... (or you lack access).`);\n        }\n        setDisplayData([]);\n      } else {\n        const processedData = [];\n        const initialStatus = {};\n        for (let i = 0; i < cidsArray.length; i++) {\n          const cid = cidsArray[i];\n          const hash = hashesArray[i];\n          const displayUrl = buildDisplayUrl(cid);\n          // console.log(`Processing Item ${i}: CID='${cid}', Hash='${hash}', Generated URL='${displayUrl}'`); // Optional log\n          if (displayUrl && typeof hash === 'string' && hash.length > 10) {\n            // Use CID if available and seems valid, otherwise hash, or combine\n            const uniqueId = cid && cid.length > 40 ? cid : `${cid}-${hash}`; // Make ID more robust\n            processedData.push({\n              id: uniqueId,\n              cid: cid,\n              hash: hash,\n              displayUrl: displayUrl\n            });\n            initialStatus[uniqueId] = 'idle';\n          } else {\n            console.warn(`Skipping item ${i}: Invalid URL ('${displayUrl}') or Hash ('${hash}') derived from CID '${cid}'`);\n          }\n        }\n        if (processedData.length > 0) {\n          console.log(\"Setting display data:\", processedData);\n          setDisplayData(processedData);\n          setVerificationStatus(initialStatus);\n          setMessage(\"\"); // Clear loading/status message on success\n        } else {\n          setDisplayData([]);\n          // Different message if filtering removed everything vs. contract returning empty\n          if (cidsArray.length > 0) {\n            setMessage(`No processable content URLs/hashes found for address ${addressToQuery.substring(0, 6)}... after filtering.`);\n          } else {\n            // This case handled above\n          }\n        }\n      }\n    } catch (e) {\n      var _e$data, _e$error;\n      // --- Error Handling ---\n      console.error(\"Error during getdata execution:\", e);\n      let specificError = \"An unknown error occurred.\";\n      // Prioritize specific revert reason\n      if (e.reason) {\n        specificError = e.reason;\n        console.log(\"Contract Revert Reason:\", specificError);\n      } else if ((_e$data = e.data) !== null && _e$data !== void 0 && _e$data.message) {\n        specificError = e.data.message;\n      } else if ((_e$error = e.error) !== null && _e$error !== void 0 && _e$error.message) {\n        specificError = e.error.message;\n      } else if (e.message) {\n        specificError = e.message;\n      }\n      // Update UI message\n      setMessage(`Error fetching data: ${specificError}. Please check the address and network permissions.`);\n      setDisplayData([]); // Clear data on error\n    } finally {\n      setLoading(false); // Ensure loading indicator is turned off\n    }\n  };\n\n  // --- verifyHash Function (Keep as is) ---\n  const verifyHash = useCallback(async (imageUrl, expectedHash, itemId) => {\n    if (!imageUrl || !expectedHash || !itemId) {\n      /*...*/return;\n    }\n    setVerificationStatus(prev => ({\n      ...prev,\n      [itemId]: 'verifying'\n    }));\n    try {\n      const response = await fetch(imageUrl);\n      if (!response.ok) {\n        throw new Error(`Fetch failed: ${response.status} ${response.statusText}`);\n      }\n      const fileBuffer = await response.arrayBuffer();\n      const calculatedHash = await calculateArrayBufferHash(fileBuffer);\n      if (calculatedHash.toLowerCase() === expectedHash.toLowerCase()) {\n        setVerificationStatus(prev => ({\n          ...prev,\n          [itemId]: 'verified'\n        }));\n      } else {\n        setVerificationStatus(prev => ({\n          ...prev,\n          [itemId]: 'mismatch'\n        }));\n        console.warn(`Hash mismatch! Expected: ${expectedHash}, Calculated: ${calculatedHash}`);\n      }\n    } catch (error) {\n      console.error(`Verification ERROR for ${itemId}:`, error);\n      setVerificationStatus(prev => ({\n        ...prev,\n        [itemId]: 'error'\n      }));\n    }\n  }, []);\n\n  // --- getStatusInfo Function (Keep as is) ---\n  const getStatusInfo = status => {\n    switch (status) {\n      case 'verifying':\n        return {\n          text: 'Verifying...',\n          class: 'status-verifying'\n        };\n      case 'verified':\n        return {\n          text: '✅ Verified',\n          class: 'status-verified'\n        };\n      case 'mismatch':\n        return {\n          text: '❌ Mismatch',\n          class: 'status-mismatch'\n        };\n      case 'error':\n        return {\n          text: '⚠️ Error',\n          class: 'status-error'\n        };\n      case 'idle':\n      default:\n        return {\n          text: 'Not Verified',\n          class: 'status-idle'\n        };\n    }\n  };\n\n  // --- Component Return JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `status-message ${message.startsWith('Error') ? 'error' : ''}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-indicator\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: [displayData.length === 0 && !loading && !message.startsWith('Error') && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data-message\",\n        children: \"No items to display for this address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this), displayData.map(item => {\n        var _item$cid, _item$hash;\n        const statusInfo = getStatusInfo(verificationStatus[item.id]);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item-container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MediaRenderer, {\n            url: item.displayUrl,\n            altText: `IPFS file: ${(_item$cid = item.cid) === null || _item$cid === void 0 ? void 0 : _item$cid.substring(0, 10)}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"image-hash\",\n            title: item.hash,\n            children: [\"Hash: \", (_item$hash = item.hash) === null || _item$hash === void 0 ? void 0 : _item$hash.substring(0, 10), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verification-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `verification-status ${statusInfo.class}`,\n              children: statusInfo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), (statusInfo.class === 'status-idle' || statusInfo.class === 'status-mismatch' || statusInfo.class === 'status-error') && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"verify-button\",\n              onClick: () => verifyHash(item.displayUrl, item.hash, item.id),\n              disabled: loading || verificationStatus[item.id] === 'verifying',\n              children: \"Verify Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Address (Optional)\",\n        className: \"address\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"center button\" // Keep 'center' class if used elsewhere\n        ,\n        onClick: getdata,\n        disabled: !contract || loading || !account // Also disable if account not connected\n        ,\n        children: loading ? \"Loading...\" : \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s2(Display, \"PNsTf5w1qIECnEVf462mcMTnDoo=\");\n_c2 = Display;\nexport default Display;\nvar _c, _c2;\n$RefreshReg$(_c, \"MediaRenderer\");\n$RefreshReg$(_c2, \"Display\");","map":{"version":3,"names":["useState","useCallback","useEffect","jsxDEV","_jsxDEV","calculateArrayBufferHash","buffer","byteLength","Error","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","error","console","buildDisplayUrl","cidOrUri","trim","length","warn","gateways","gateway","startsWith","some","gw","cid","substring","log","MediaRenderer","url","altText","_s","mediaType","setMediaType","tryVideo","setTryVideo","hasError","setHasError","extensionMatch","match","extension","toLowerCase","imageExtensions","videoExtensions","includes","handleImageError","handleVideoError","className","children","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","preload","onError","alt","loading","_c","Display","contract","account","_s2","displayData","setDisplayData","message","setMessage","setLoading","verificationStatus","setVerificationStatus","getdata","otherAddressInput","document","querySelector","otherAddress","value","addressToQuery","test","connectedAccountLower","currentSignerAddress","signer","getAddress","result","display","isArray","errorDetail","cidsArray","hashesArray","processedData","initialStatus","i","hash","displayUrl","uniqueId","push","id","e","_e$data","_e$error","specificError","reason","data","verifyHash","imageUrl","expectedHash","itemId","prev","response","fetch","ok","status","statusText","fileBuffer","arrayBuffer","calculatedHash","getStatusInfo","text","class","item","_item$cid","_item$hash","statusInfo","title","onClick","disabled","type","placeholder","_c2","$RefreshReg$"],"sources":["/home/pranav/Documents/Blockchain-Project/client/src/components/Display.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport \"./Display.css\"; // Make sure this CSS file exists\n\n// --- Hashing Helper (Keep as is) ---\nconst calculateArrayBufferHash = async (buffer) => {\n  if (!buffer || buffer.byteLength === 0) {\n    throw new Error(\"Cannot hash empty or invalid buffer.\");\n  }\n  try {\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n    return hashHex;\n  } catch (error) {\n     console.error(\"Error during crypto.subtle.digest:\", error);\n     throw new Error(\"Hashing failed. Crypto API might not be available or input was invalid.\");\n  }\n};\n\n// --- URL Builder Helper (Keep as is, using Pinata default) ---\nconst buildDisplayUrl = (cidOrUri) => {\n    if (!cidOrUri || typeof cidOrUri !== 'string' || cidOrUri.trim().length === 0) {\n        console.warn(`Invalid input for buildDisplayUrl: ${cidOrUri}`);\n        return null;\n    }\n    const gateways = [\n        \"https://gateway.pinata.cloud/ipfs/\", // Using Pinata\n        \"https://ipfs.io/ipfs/\",\n        \"https://cloudflare-ipfs.com/ipfs/\",\n        \"https://dweb.link/ipfs/\",\n    ];\n    const gateway = gateways[0]; // Pinata\n\n    if (cidOrUri.startsWith('http://') || cidOrUri.startsWith('https://')) {\n        if (gateways.some(gw => cidOrUri.startsWith(gw))) {\n             return cidOrUri;\n        } else {\n            console.warn(`URL is HTTP(S) but not a recognized IPFS gateway: ${cidOrUri}`);\n             return cidOrUri;\n        }\n    }\n    else if (cidOrUri.startsWith('ipfs://')) {\n        const cid = cidOrUri.substring(7);\n        return cid.length > 40 ? `${gateway}${cid}` : null;\n    }\n    else if ((cidOrUri.startsWith('Qm') || cidOrUri.startsWith('b')) && cidOrUri.length > 40) {\n         console.log(`Identified CID: ${cidOrUri}, building URL with ${gateway}`);\n         return `${gateway}${cidOrUri}`;\n    }\n    else {\n        console.warn(`Skipping unrecognized format for URL building: ${cidOrUri}`);\n        return null;\n    }\n};\n\n// --- MediaRenderer Component (Keep as is with 'tryVideo' logic) ---\nconst MediaRenderer = ({ url, altText }) => {\n  const [mediaType, setMediaType] = useState('unknown');\n  const [tryVideo, setTryVideo] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setHasError(false);\n    setTryVideo(false);\n\n    if (!url) {\n        setMediaType('unknown');\n        setHasError(true);\n        console.warn(\"MediaRenderer received invalid URL:\", url)\n        return;\n    }\n\n    const extensionMatch = url.match(/\\.([^.?#]+)(?:[?#]|$)/i);\n    const extension = extensionMatch ? extensionMatch[1].toLowerCase() : null;\n    const imageExtensions = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'svg'];\n    const videoExtensions = ['mp4', 'webm', 'ogg', 'mov', 'avi', 'mkv', 'qt'];\n\n    if (imageExtensions.includes(extension)) {\n      setMediaType('image');\n      // console.log(`Media type determined as 'image' for ${url}`); // Optional log\n    } else if (videoExtensions.includes(extension)) {\n      setMediaType('video');\n      // console.log(`Media type determined as 'video' for ${url}`); // Optional log\n    } else {\n      setMediaType('unknown');\n      // console.log(`Media type 'unknown' for ${url}, will try rendering as image first.`); // Optional log\n    }\n  }, [url]);\n\n  const handleImageError = () => {\n    // console.log(`>>> handleImageError called for URL: ${url}. Current mediaType: ${mediaType}, hasError: ${hasError}, tryVideo: ${tryVideo}`); // Optional debug log\n    if (mediaType === 'unknown' && !hasError) {\n      console.warn(`Image attempt failed for unknown type: ${url}. Setting flag to try video render.`);\n      setTryVideo(true);\n    } else {\n      console.warn(`Failed to load image from: ${url}. Setting final error state.`);\n      setHasError(true);\n    }\n  };\n\n  const handleVideoError = () => {\n    console.warn(`Failed to load video from: ${url}. Setting final error state.`);\n    setHasError(true);\n  };\n\n  if (hasError) {\n    return (\n      <div className=\"media-fallback error\">\n        ⚠️ Error loading media.{\" \"}\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Open Link</a>\n      </div>\n    );\n  }\n\n  if (mediaType === 'video' || tryVideo) {\n    // console.log(`Rendering <video> for ${url} (mediaType: ${mediaType}, tryVideo: ${tryVideo})`); // Optional log\n    return (\n      <video\n        key={url + '-video'}\n        src={url}\n        controls preload=\"metadata\"\n        className=\"media-item video-item\"\n        onError={handleVideoError}\n      >\n        Your browser does not support the video tag.{\" \"}\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Download video</a>\n      </video>\n    );\n  }\n\n  if (mediaType === 'image' || (mediaType === 'unknown' && !tryVideo)) {\n    // console.log(`Rendering <img> for ${url} (mediaType: ${mediaType}, tryVideo: ${tryVideo})`); // Optional log\n    return (\n      <img\n        key={url + '-image'}\n        src={url} alt={altText}\n        className=\"media-item image-list-item\"\n        onError={handleImageError} loading=\"lazy\"\n      />\n    );\n  }\n\n  return <div className=\"media-fallback\">Loading...</div>;\n};\n\n\n// --- Main Display Component ---\nconst Display = ({ contract, account }) => {\n  const [displayData, setDisplayData] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [verificationStatus, setVerificationStatus] = useState({});\n\n  // --- getdata Function ---\n   const getdata = async () => {\n    setDisplayData([]);\n    setMessage(\"\");\n    setLoading(true);\n    setVerificationStatus({});\n\n    const otherAddressInput = document.querySelector(\".address\");\n    const otherAddress = otherAddressInput?.value.trim();\n    let addressToQuery = otherAddress || account; // Defaults to connected account if input is empty\n\n    // --- Validations ---\n    if (!contract) { setMessage(\"Error: Contract not loaded yet.\"); setLoading(false); return; }\n    if (!account) { setMessage(\"Error: Wallet not connected.\"); setLoading(false); return; } // Added check for connected account\n    if (!addressToQuery) { setMessage(\"Error: No address specified or connected.\"); setLoading(false); return; }\n    if (!/^0x[a-fA-F0-9]{40}$/.test(addressToQuery)) { setMessage(\"Error: Invalid Ethereum address format provided.\"); setLoading(false); return; }\n    addressToQuery = addressToQuery.toLowerCase(); // Normalize address to query\n    const connectedAccountLower = account.toLowerCase(); // Normalize connected account\n\n    try {\n        setMessage(`Fetching content for ${addressToQuery.substring(0,6)}...${addressToQuery.substring(addressToQuery.length-4)}`);\n        console.log(`Fetching data for address: ${addressToQuery}`);\n\n        // --- !!! IMPORTANT: SIGNER CHECK !!! ---\n        let currentSignerAddress = '';\n        if (contract.signer) {\n            currentSignerAddress = await contract.signer.getAddress();\n            console.log(`DEBUG: Calling contract.display AS signer: ${currentSignerAddress}`);\n            // Optional: Strict check if the signer matches the 'account' prop passed down\n            if (currentSignerAddress.toLowerCase() !== connectedAccountLower) {\n                 console.error(`CRITICAL: Signer address mismatch! Component account prop: ${account}, Contract signer: ${currentSignerAddress}`);\n                 // You might want to throw an error or force a reload here if this happens\n                 // throw new Error(\"Signer mismatch detected. Please reconnect wallet or refresh.\");\n                 setMessage(\"Error: Wallet signer mismatch. Please refresh or reconnect.\");\n                 setLoading(false);\n                 return; // Stop execution\n            }\n        } else {\n             console.error(\"CRITICAL: Contract object does not have a signer attached!\");\n             setMessage(\"Error: Cannot read data - contract signer is missing.\");\n             setLoading(false);\n             return; // Stop execution\n        }\n        // --- END SIGNER CHECK ---\n\n        // --- Call the Smart Contract ---\n        // The contract object inherently uses its associated signer (checked above)\n        // So msg.sender in the contract call will be currentSignerAddress\n        const result = await contract.display(addressToQuery);\n        console.log(\"Raw contract result:\", result);\n\n        // --- Validate Contract Result Structure ---\n        if (!Array.isArray(result) || result.length !== 2 || !Array.isArray(result[0]) || !Array.isArray(result[1])) {\n            let errorDetail = \"Contract did not return the expected structure [[string], [string]].\";\n             if (result === null || typeof result !== 'object') { errorDetail = `Contract returned non-array data: ${result}`; }\n             throw new Error(`${errorDetail} Check contract logic or address permissions.`);\n        }\n        const cidsArray = result[0];\n        const hashesArray = result[1];\n        if (cidsArray.length !== hashesArray.length) { throw new Error(\"Contract returned mismatched CID and Hash data.\"); }\n\n        // --- Process Fetched Data ---\n        if (cidsArray.length === 0) {\n            // Use a different message if querying another address vs self\n            if (addressToQuery === connectedAccountLower) {\n                setMessage(`You haven't uploaded any content yet.`);\n            } else {\n                setMessage(`No content found for address ${addressToQuery.substring(0,6)}... (or you lack access).`);\n            }\n            setDisplayData([]);\n        } else {\n            const processedData = [];\n            const initialStatus = {};\n            for (let i = 0; i < cidsArray.length; i++) {\n                const cid = cidsArray[i];\n                const hash = hashesArray[i];\n                const displayUrl = buildDisplayUrl(cid);\n                // console.log(`Processing Item ${i}: CID='${cid}', Hash='${hash}', Generated URL='${displayUrl}'`); // Optional log\n                if (displayUrl && typeof hash === 'string' && hash.length > 10) {\n                    // Use CID if available and seems valid, otherwise hash, or combine\n                    const uniqueId = (cid && cid.length > 40) ? cid : `${cid}-${hash}`; // Make ID more robust\n                    processedData.push({ id: uniqueId, cid: cid, hash: hash, displayUrl: displayUrl });\n                    initialStatus[uniqueId] = 'idle';\n                } else {\n                    console.warn(`Skipping item ${i}: Invalid URL ('${displayUrl}') or Hash ('${hash}') derived from CID '${cid}'`);\n                }\n            }\n            if (processedData.length > 0) {\n                console.log(\"Setting display data:\", processedData);\n                setDisplayData(processedData);\n                setVerificationStatus(initialStatus);\n                setMessage(\"\"); // Clear loading/status message on success\n            } else {\n                setDisplayData([]);\n                // Different message if filtering removed everything vs. contract returning empty\n                if (cidsArray.length > 0) {\n                     setMessage(`No processable content URLs/hashes found for address ${addressToQuery.substring(0,6)}... after filtering.`);\n                } else {\n                     // This case handled above\n                }\n            }\n        }\n    } catch (e) {\n        // --- Error Handling ---\n        console.error(\"Error during getdata execution:\", e);\n        let specificError = \"An unknown error occurred.\";\n        // Prioritize specific revert reason\n        if (e.reason) {\n            specificError = e.reason;\n            console.log(\"Contract Revert Reason:\", specificError);\n        } else if (e.data?.message) {\n            specificError = e.data.message;\n        } else if (e.error?.message) {\n             specificError = e.error.message;\n        } else if (e.message) {\n             specificError = e.message;\n        }\n        // Update UI message\n        setMessage(`Error fetching data: ${specificError}. Please check the address and network permissions.`);\n        setDisplayData([]); // Clear data on error\n    } finally {\n       setLoading(false); // Ensure loading indicator is turned off\n    }\n};\n\n  // --- verifyHash Function (Keep as is) ---\n  const verifyHash = useCallback(async (imageUrl, expectedHash, itemId) => {\n    if (!imageUrl || !expectedHash || !itemId) { /*...*/ return; }\n    setVerificationStatus(prev => ({ ...prev, [itemId]: 'verifying' }));\n    try {\n        const response = await fetch(imageUrl);\n        if (!response.ok) { throw new Error(`Fetch failed: ${response.status} ${response.statusText}`); }\n        const fileBuffer = await response.arrayBuffer();\n        const calculatedHash = await calculateArrayBufferHash(fileBuffer);\n        if (calculatedHash.toLowerCase() === expectedHash.toLowerCase()) {\n            setVerificationStatus(prev => ({ ...prev, [itemId]: 'verified' }));\n        } else {\n            setVerificationStatus(prev => ({ ...prev, [itemId]: 'mismatch' }));\n            console.warn(`Hash mismatch! Expected: ${expectedHash}, Calculated: ${calculatedHash}`);\n        }\n    } catch (error) {\n        console.error(`Verification ERROR for ${itemId}:`, error);\n        setVerificationStatus(prev => ({ ...prev, [itemId]: 'error' }));\n    }\n  }, []);\n\n  // --- getStatusInfo Function (Keep as is) ---\n  const getStatusInfo = (status) => {\n    switch (status) {\n        case 'verifying': return { text: 'Verifying...', class: 'status-verifying' };\n        case 'verified': return { text: '✅ Verified', class: 'status-verified' };\n        case 'mismatch': return { text: '❌ Mismatch', class: 'status-mismatch' };\n        case 'error': return { text: '⚠️ Error', class: 'status-error' };\n        case 'idle': default: return { text: 'Not Verified', class: 'status-idle' };\n    }\n  };\n\n  // --- Component Return JSX ---\n  return (\n    <div className=\"display-container\">\n      {/* Status/Loading Messages */}\n      {message && <p className={`status-message ${message.startsWith('Error') ? 'error' : ''}`}>{message}</p>}\n      {loading && <p className=\"loading-indicator\">Loading...</p>}\n\n      {/* Item List */}\n      <div className=\"image-list\">\n        {displayData.length === 0 && !loading && !message.startsWith('Error') && (\n            <p className=\"no-data-message\">No items to display for this address.</p>\n        )}\n        {displayData.map((item) => {\n          const statusInfo = getStatusInfo(verificationStatus[item.id]);\n          return (\n            <div className=\"image-item-container\" key={item.id}> {/* Using updated uniqueId (cid/hash) as key */}\n              <MediaRenderer\n                 url={item.displayUrl}\n                 altText={`IPFS file: ${item.cid?.substring(0, 10)}...`}\n              />\n              <p className=\"image-hash\" title={item.hash}>\n                  Hash: {item.hash?.substring(0, 10)}...\n              </p>\n              <div className=\"verification-section\">\n                <span className={`verification-status ${statusInfo.class}`}>\n                   {statusInfo.text}\n                </span>\n                {(statusInfo.class === 'status-idle' || statusInfo.class === 'status-mismatch' || statusInfo.class === 'status-error') && (\n                  <button\n                    className=\"verify-button\"\n                    onClick={() => verifyHash(item.displayUrl, item.hash, item.id)}\n                    disabled={loading || verificationStatus[item.id] === 'verifying'}\n                  >\n                    Verify Hash\n                  </button>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Input Controls */}\n      <div className=\"controls\">\n        <input\n            type=\"text\"\n            placeholder=\"Enter Address (Optional)\"\n            className=\"address\"\n            disabled={loading}\n          />\n          <button\n            className=\"center button\" // Keep 'center' class if used elsewhere\n            onClick={getdata}\n            disabled={!contract || loading || !account} // Also disable if account not connected\n           >\n            {loading ? \"Loading...\" : \"Get Data\"}\n          </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Display;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}